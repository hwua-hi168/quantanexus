# Global configuration
global:
  namespace: abc-platform
  domainName: qntest002.hi168.com
  masterNode: com-calino-master-1
  masterNodes: "com-calino-master-1,com-calino-master-2"
  workerNodes: "com-calino-worker-1"

# Component toggles
components:
  createNamespace: true
  ingressController: true
  quantanexus: true
  abcExperimentService: true
  abcWebShell: true
  abcUploader: true
  hwuaNodeService: true

# Ingress Nginx configuration
ingress-nginx:
  className: "nginx"
  defaultBackend:
    enabled: true
    image:
      registry: harbor.hi168.com/quantanexus
      image: defaultbackend-amd64
      tag: "1.5"

  controller:
    image:
      repository: harbor.hi168.com/quantanexus/controller
      tag: v1.1.2
      digest: ""
    kind: DaemonSet
    # nodeSelector:
    #   kubernetes.io/hostname: "com-cilium-master-2"
    # service:
    #   externalTrafficPolicy: Local
    hostNetwork: true
    # 启用 Webhooks (推荐)
    admissionWebhooks:
      enabled: true
      patch:
        enabled: true
        image:
          registry: swr.cn-north-4.myhuaweicloud.com/ddn-k8s/k8s.gcr.io
          image: ingress-nginx/kube-webhook-certgen
          tag: v1.1.1
          digest: ""
    # 额外的 args, 如果需要
    extraArgs:
      enable-ssl-passthrough: true
      default-ssl-certificate: "abc-platform/abc-tls"

ingress:
  enabled: true
  className: "nginx"
  tls:
    - hosts:
      - qntest001.hi168.com
      secretName: abc-tls
  tlsSecret:
    name: abc-tls
    certificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZCRENDQSt5Z0F3SUJBZ0lTQll6OG1wbUhPYUlTSnorcUlXb2x2SzNjTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURNeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rd3dDZ1lEVlFRRApFd05TTVRJd0hoY05NalV3T1RJME1ESTBOekV5V2hjTk1qVXhNakl6TURJME56RXhXakFlTVJ3d0dnWURWUVFECkV4TnhiblJsYzNRd01ESXVhR2t4TmpndVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUExWmtLSlZ2dEpDMVFPRjlqVkwrcnpFSlNCZExBekMxaWc5M0M0UVpoTld2ZGJvd0FZUTd2bSs3SQpIWFNXWStGOEtieEtvd2JHYW9vd1lSOWZBY1BqRnViVTZPM2YwVDVCVTRLSDhvM1JrVVlpR2RNQkw5WVdNRFR1Cnc3aTl3RytpQU9IdFFHcy9rb1FEVzZ3SisyNUprbUxwVmJxWmVvSG15T0xnREhMeC9ZOFE2QXhUcDJVT0drUEQKNmVaT1lCWjM1ZytSb2dBcGExQnRQRUtqRjdaRzRJZ1NQTERSNUNVYi9razE2TUNnbXk2K0VnSFhpT2tmbmZTego0NG04OWw1RWJ2QVppU2F4SVA0dzRQdjZlVkJTSHUvUmUxd2ZDMDBGajdQN3YyZC9EWGhoeTdEb1RHY0xaQnpZCjNUSXVSNS9Vc2x2Y3E2cmQ1UDNXQlhhWXBtQjVJd0lEQVFBQm80SUNKVENDQWlFd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlNTdkE5ZkNTLzM4T3RlTlo0Ly9LempCZWpJUVRBZkJnTlZIU01FR0RBV2dCUUF0U255CkxZNXZNZWliVEsxNFB2cmM2UXpSMGpBekJnZ3JCZ0VGQlFjQkFRUW5NQ1V3SXdZSUt3WUJCUVVITUFLR0YyaDAKZEhBNkx5OXlNVEl1YVM1c1pXNWpjaTV2Y21jdk1CNEdBMVVkRVFRWE1CV0NFM0Z1ZEdWemREQXdNaTVvYVRFMgpPQzVqYjIwd0V3WURWUjBnQkF3d0NqQUlCZ1puZ1F3QkFnRXdMZ1lEVlIwZkJDY3dKVEFqb0NHZ0g0WWRhSFIwCmNEb3ZMM0l4TWk1akxteGxibU55TG05eVp5ODVNeTVqY213d2dnRUdCZ29yQmdFRUFkWjVBZ1FDQklIM0JJSDAKQVBJQWR3Q2tRc1VHU1dCaFZJOFAxT3FjKzNvdEprVk5oNmwvTDk5RldmWW5UenFFVkFBQUFabDUwN2ZOQUFBRQpBd0JJTUVZQ0lRQzNUUUpQSXlkMFduT0hUQVh1YzR4aHd1M1hENjgwdXowOXIxTlZjdHY0MmdJaEFLQ0hwSFp0Ci9Kc3hoMG1BYXZteTYzOGh4cHJSdWo3aUFnaDAzV3N2Sk1iZ0FIY0FHWWJVeHlpcWIvNjZBMjk0S2swQmthck8KTFhJeEQ2N09YWEJCTFNWTXg5UUFBQUdaZWRPNGpRQUFCQU1BU0RCR0FpRUF0NU00blBMYWpuSEIxQmdjZWVqVwo2dFo3cG5WS25KQU1kMnJDRjdMZ0lMOENJUUNqbzI2ZTBhcmp4NjhCWHNpYXNmbXFlQmR0cWxXVkRMNlZmS1pECjJ3VnJoVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBRDlmaUxPcVBjUzBOY29iR2ZsRUNSdUxIakJST2haWXgKenF6MDJDT1lnSjFCME9vZDZ6TWw4UFZWNTBjazBoMVVwemY1RWhYM0VzWldrMytqTEdoY0toRWF0RVJCMnNWawpGbDYzQlJqNU1NWGJTbExhS3hlMnlhVGtWOEJ5blhGSG1iWjY0VmcrTTdnRXJuZEZRL29zMVhUZWtlWE5rOFpwCloyVUgvQy9HdzhlazAyZ0ZPSHZiTG93THVXdjVHQldaVTVqUUs4cFJ3Nnp0Rmd6Tlk3RlZncGlGOTdWMzA0M24KdU4rMnBZL285d2RsZmRuWG5iNG55ZGZrVGgzM3BBVmYyeGh5UmZhTTUrLy9xQTlHRkJtV1I5bnBrMlJ5YUpwZwpRYVVWY3pxajM3WmE5OFZCbDlMUXg3a3d6UVo4Vm1lby94UXJFekNab2dmK3hFQ1h1Sk84MFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGQmpDQ0F1NmdBd0lCQWdJUkFNSVNNa3R3cWJTUmNkeEE5K0tGSmp3d0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpRd016RXpNREF3TURBdwpXaGNOTWpjd016RXlNak0xT1RVNVdqQXpNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTU1Bb0dBMVVFQXhNRFVqRXlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUEycGdvZEsyK2xQNDc0QjdpNVV0MXF5d1NmKzJuQXpKK05wZnM2REdQcFJPTkM1a3VIczBCVVQxTQo1U2h1Q1ZVeHFxVWlYWEwwTFFmQ1RVQTgzd0VqdVhnMzlScGxNalRtaG5HZEJPK0VDRnU5QWhxWjY2WUJBSnB6CmtHMlBvZ2VnMEpmVDJrVmhnVFU5RlBuRXdGOXEzQXVXR3JDZjR5cnF2U3JXbU1lYmNhczdkQTg4MjdKZ3ZscEwKVGhqcDJ5cHpYSWxoWlo3KzdUeW15MDV2NUo3NUFFYXoveGxOS21PemptYkdHSVZ3eDFCbGJ6dDA1VWlERHdoWQpYUzBqblY2ai91amJBS0hTOU9NWlRmTHVldllubnVYTm5DMmk4bitjRjYzdkV6YzUwYlRJTEVIV2hzRHA3Q0g0CldSdC91VHA4bjF3Qm5XSUV3aWk5Q3EwOHloRHNHd0lEQVFBQm80SDRNSUgxTUE0R0ExVWREd0VCL3dRRUF3SUIKaGpBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFnWUlLd1lCQlFVSEF3RXdFZ1lEVlIwVEFRSC9CQWd3QmdFQgovd0lCQURBZEJnTlZIUTRFRmdRVUFMVXA4aTJPYnpIb20weXRlRDc2M09rTTBkSXdId1lEVlIwakJCZ3dGb0FVCmViUlo1bnUyNWVRQmM0QUlpTWdhV1BicG0yNHdNZ1lJS3dZQkJRVUhBUUVFSmpBa01DSUdDQ3NHQVFVRkJ6QUMKaGhab2RIUndPaTh2ZURFdWFTNXNaVzVqY2k1dmNtY3ZNQk1HQTFVZElBUU1NQW93Q0FZR1o0RU1BUUlCTUNjRwpBMVVkSHdRZ01CNHdIS0Fhb0JpR0ZtaDBkSEE2THk5NE1TNWpMbXhsYm1OeUxtOXlaeTh3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dJQkFJOTEwQW5QYW5aSVpUS1MzclZFeUlWMjlCV0VqQUsvZHV1ejhlTDVib1NvVnBIaGtrdjMKNGVvQWVFaVBkWkxqNUVaN0cyQXJJSytnemhUbFJRMXE0RktHcFBQYUZCU3BxVi94YlViNVVsQVhRT25rSG4zbQpGVmorcVl2ODcvV2VZK0JtNHNOM094OEJoeWFVN1VBUTNMZVo3TjFYMDF4eFFlNHdJQUFFM0pWTFVDaUhtWkwrCnFvQ1V0Z1lJRlBnY2czNTBRTVVJV2d4UFhOR0VuY1Q5MjFuZTdubHVJMDJWOHBMVW1DbHFYT3NDd1VMdytQVk8KWkNCN3FPTXh4TUJvQ1VlTDJMbDRvTXBPU3I1cEpDcExOM3RSQTJzNlAxS0xzOVRTclZoT2srN0xYMjhOTVVsSQp1c1EvbnhMSklEMFJoQWVGdFBqeU9DT3NjUUJBNTMrTlJqU0NhazdQNEE1alg3cHBta2NKRUNMK1MwaTNrWFZVCnk1TWU1QmJyVTg5NzNqWk52L2F4NitaSzZUTThqV21pbUw2b2Y2T3JYN1pVNkUyV3FhenpzRnJMRzNvMmt5U2IKemxoU2dKODFDbDR0djNTYllpWVhuSkV4S1F2emY4M0RZb3RveDNmMGZ3djd4bG4xQTJaTHBsQ2IwTytsL0FLMApZRTBEUzJGUHhTQUhpMGl3TWZXMm5OSEpyWGNZM0xMSEQ3N2dSZ2plNEV2ZXViaTJ4eGErTm1rL2htaExkSUVUCmlWREZhbm9Dck1WSXBRNTlYV0hremRGbW9IWEhCVjdvaWJWakdTTzdVTFNRN01KMU56NTFwaHVESlNnQUlVN0EKMHpyTG5PckFqL2RmcmxFV1JoQ3ZBZ2J1d0xaWDFBMnNqTmpYb1BPSGJzUGl5K2xPMUtGOC9YWTcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    privateKey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMVprS0pWdnRKQzFRT0Y5alZMK3J6RUpTQmRMQXpDMWlnOTNDNFFaaE5XdmRib3dBCllRN3ZtKzdJSFhTV1krRjhLYnhLb3diR2Fvb3dZUjlmQWNQakZ1YlU2TzNmMFQ1QlU0S0g4bzNSa1VZaUdkTUIKTDlZV01EVHV3N2k5d0craUFPSHRRR3Mva29RRFc2d0orMjVKa21McFZicVplb0hteU9MZ0RITHgvWThRNkF4VApwMlVPR2tQRDZlWk9ZQlozNWcrUm9nQXBhMUJ0UEVLakY3Wkc0SWdTUExEUjVDVWIva2sxNk1DZ215NitFZ0hYCmlPa2ZuZlN6NDRtODlsNUVidkFaaVNheElQNHc0UHY2ZVZCU0h1L1JlMXdmQzAwRmo3UDd2MmQvRFhoaHk3RG8KVEdjTFpCelkzVEl1UjUvVXNsdmNxNnJkNVAzV0JYYVlwbUI1SXdJREFRQUJBb0lCQVFDWWZCSzBMUFlVZDR6bgpVYUdWNU9kK2dISVIyaXp0RmhGWVZqNURhc3lHMktSUndQeWNUWTljNEpCWUJ0MCtITUVKQW5TK0FaNHdmTXFnCjYwWmwralBxSzR3ZlpZSDgzTmJDQ1ZPSUl4cFMvYUJta3k0cnVraEl6ZUVPTkpxeUFIL0U1WVQ4RWhSbVFud3IKTzV3OHRMVXRIaE81c2ViVGdGMERXSVBlSDBrR1c0Z0V6VzlBN0h2MWJnOW9QbW5UbkFsUUFWcjdSYXBHamhFMgpHdEplbWJ1NHY5Zm95bHljTFZ0VnVnYVNMb0pvVHVxQ1hHc3FIV0dhelJwTmNWSXJlN1dMU0ErRkRpZHFlZUo3CnVTS1U0c0grZVhCU1hoYlZMbGV6dzh6MGQwTC9MZ20rSDZjU0RLVk1CVHNETFBNU2U0MEVwUnBMalMyQnBUOWEKaVV3L3ZteWhBb0dCQVBIQk9ET0twdnNUeGY1S3grdmJWdWRoalNHQzk3YUJqY2Z0VmRlVi81TTh1aGdEUStBUApkUDBXd3d0SG9zRXpWdFhHb1pseFRFbThGZ1hFU2d2VTEyZU5rbENEVDIrbnVOR1NIaGY5MHRPdTArbU0rMlY0Ci80ZzNVS2RmYzhYU3dpd2JTSE82U3F6NE1uU3QzcmM5UENObCtKRFE0L0NxK3ZtTzE3NGxFVi9MQW9HQkFPSXYKRlQwV3E1alNCSExITERTOTgwK2ZiVDcrSDEzdTcwa0xEYlhSNkJ3UFArMk1ZQm12RTFZdlMzRS9DK3dWcVcwVwpEZTIxc0EyL1loZ05OMCsxUU1aKzNkZFBFTElBYi9LdmdxaVJ6cmptNmdWNndoSTZkQWNSWThDZ080OHIyRXNqCktnOXNEOS8veldzY0h0ajZBUEVRbE05c2pyeTdVSlpGOWwvNkF2RUpBb0dCQU9lY1NMN0FjRmVOU3h2a0F3TUkKb1lxTllBdWlFTFp1Q2lwblM5MStIRnV3UzAxa0cyd1hBdXJTR3N5OHRjWEk3TUZrU2ovYVZzOHhmaHZLUVhKeQpXR2dpTHZJcHl6bmFndXRzeEo0UmxDRXZsbUJqckJvOFFQdjhtcTJ2ZWhnbFlkZWx6OVRudmxGV2UraGpCME9nClMvUlI1a0Mva0JGcmpZVDNmK1B3V1dQZkFvR0JBS0pBemthTlRibUo1d0VEV2ZYWDBZUHJ4TzJzVklvSXpnU2kKOWtuWTgxMjFudEZrb3NlcDdRQWxXMFE0eXUrbnRtdDNwN1EvWXJUcDlvOTBZNW85VnVOTnZRd29QcnpDVFl4VgpWVEJoc0Y2NTMyVGc0L2s1ajJSR21EMWxkSFJIS3Bqejk4Y3FhTlR5WnNTUVhweWQ4ekQ3Q1JVbk5kbXpzYUtyCk80c3NDUklwQW9HQkFJWklLSnNOQ2dTajdXVnhDZVU1WlNyZXRDb3JmT0t6b3VYOTY5MFI2aTN0MVpybWFnazkKQkRyREFKUXJsNmV2cktpOGNVOEVJaEEwTVEwNnJieWJtTEhKcjQrTktWQm5lNDdjTDR4MUFBd2VQa203TE5TRwpxRHRXdWhJc1hlZGZWYy90b3VINTRrZEgvSjRKUnpITmRteVRrUVRrVzJYaWg1bHppR0V3b1ZxbQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  tlsCommonSecret:
    name: abc-tls-hwua-common-4
    certificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZCRENDQSt5Z0F3SUJBZ0lTQlpSanh2bmVIUDBNcW1lNHM0T0pWYWVrTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURNeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rd3dDZ1lEVlFRRApFd05TTVRNd0hoY05NalV3T1RJME1ESTBPRFUxV2hjTk1qVXhNakl6TURJME9EVTBXakFnTVI0d0hBWURWUVFECkRCVXFMbkZ1ZEdWemREQXdNaTVvYVRFMk9DNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURHYkxRc3F0T1E3dmdxUFZmY0g4YTR2TGkxYkJWSG02WWlpUTdQQmJzdkRVQWZLcTFxQWJWdQpveUlCc2ZsZVZiYWF3cUloSzJiZGcvaktodlpKMGhlYTdmaXFyNzdxOVkzcCswZU56S2poUmdOMXl2NmlIaTVVCmF1SEJhMG1XYUNlS3RKUUhKc1g5d09OZ1dzaGVuWkN5TVBiUWk1MW9YT3JLR2lVU080MUtFZk1WSE9NaW5aR1QKSS9FcVo5bkVTckVGNU84ZFZsRWJFODU4N29uZ3hOQkZiMWJ3aWZja3lUa1ozYy9zczRwRUZrQlNjVGRxc042WgplQVpUdWhCQ2xhaisvc2tjdVVIQTRlSE9vVFIvRTNEVW5tQkNKZjJmNWVOakhsTG8vL2UxQXNvUmo0M2RuZDl3Cm91SXQ1SFF3akIwamkzMGtYTWpEM0FpTUFkNFduL0twQWdNQkFBR2pnZ0lqTUlJQ0h6QU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQwpNQUF3SFFZRFZSME9CQllFRkxlYzE0MzRZYU51ZUd0bFZudHVrQXZvdFZ0MU1COEdBMVVkSXdRWU1CYUFGT2VyCm53OHNNNkJUMDE1UGVNaXloQTQ3MXBJek1ETUdDQ3NHQVFVRkJ3RUJCQ2N3SlRBakJnZ3JCZ0VGQlFjd0FvWVgKYUhSMGNEb3ZMM0l4TXk1cExteGxibU55TG05eVp5OHdJQVlEVlIwUkJCa3dGNElWS2k1eGJuUmxjM1F3TURJdQphR2t4TmpndVkyOXRNQk1HQTFVZElBUU1NQW93Q0FZR1o0RU1BUUlCTUM0R0ExVWRId1FuTUNVd0k2QWhvQitHCkhXaDBkSEE2THk5eU1UTXVZeTVzWlc1amNpNXZjbWN2TXpjdVkzSnNNSUlCQWdZS0t3WUJCQUhXZVFJRUFnU0IKOHdTQjhBRHVBSFVBRXZGT05MMVRja3lFQmhuRGp6OTZFL2pudFdLSGlKeHRNQVdFNitXR0pqb0FBQUdaZWRWTApiUUFBQkFNQVJqQkVBaUE2MStQYVRkU0owSzJHVWk2RExLbmo0eEhmOUlZZ3Q0ZGxSRlpiNXRvQ3hnSWdGazU2ClRZdm1KUG1DWXFvZkUzZGRJT2hSay9GU2RUNExGeU80Z3ppMmRkWUFkUUR0UEV2VzZBYkNwS0lBVjl2TEpPSTQKQWQ5UkwrM0Voc1Z3RHlEZHR6NC80QUFBQVpsNTFWTThBQUFFQXdCR01FUUNJQVpOQVBuMFloVXlwS2w0VDBSYQpiV0FWOUduZGg0MXpKeGFZYVpKR0FaTnRBaUJacTl3L2txY1Jua0plMEI2L3NDNFJSWXZDeVFjdi9XQTlkRU5yCktod2JlVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBUlNBRW5IRm1DckZsNjhaZURFMXMrZjZQcjBObEx5N20Kd2JvRElPNFVFaWJENFZ0RWZyeFRSMmhudFpEWXhZd0YzTWEvLysxbkJnWUZocEUrSnV6SFlRZ1R0eWRPRGVDcAo5ZFJvNURlWkZCdWFxOE9QZXQzenJGcVlCMnZhY1NCTnZqaHp6UXgxeEZlcnllc2lJUUhpVjI0dWZDelpQemZSCmpSTzBWdGptTk9QSWlaME52cFdzczMycnA0UjhjRkluSFV5Qzh2N3h2aWRxdkZPSWhFSFpUS3FsUEhWTytybzcKVVRHN1dzUnU0bWNETDd5UVhqcDNyYVQwRHNiV1Q5WmdBTkVHLy85dGVjOWhLMmJhaGdvS0IyMmhMMVhhaUl5bgp6NXdIYXlUcDRHNkRQLzYzb0hxU3VGc3lHc1cwVnlUaW42OGl6bFkyMjk0UVdpdWlNbXpLTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGQlRDQ0F1MmdBd0lCQWdJUVdnRHlFdGpVdElEemtrRlg2aW1EQlRBTkJna3Foa2lHOXcwQkFRc0ZBREJQCk1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnVaWFFnVTJWamRYSnBkSGtnVW1WelpXRnkKWTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWU1UQWVGdzB5TkRBek1UTXdNREF3TURCYQpGdzB5TnpBek1USXlNelU1TlRsYU1ETXhDekFKQmdOVkJBWVRBbFZUTVJZd0ZBWURWUVFLRXcxTVpYUW5jeUJGCmJtTnllWEIwTVF3d0NnWURWUVFERXdOU01UTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ2xaM0NOMEZhQlpCVVhZYzI1QnRTdEdaQ01KbEEzbUJaamtsVGIyY3lFQlpQczArd0lHNkJnVVVOSQpmU3ZIU0phZXRDM2FuY2duTzFlaG42dncxZzdVRGpES2I1dXgwZGFrblRJK1dFNDFiMFZZYUhFWC9EN1lYWUtnCkw3SlJiTEFhWGJoWnpqVmx5SXVocnhBMy8rT2NYY0pKRnpUL2pDdUxqZkM4Y1N5VERCMEZ4THJIemFySlhuelIKeVFIM25BUDIvQXBkOU5wNzV0dDJRbkRyOUUwaTJnQjNiOWJKWHhmOTJuVXVwVmNNOXVwY3R1QnpwV2pQb1hUaQpkWUorRUovQjlhTHJBZWs0c1FwRXpOUENpZlZKTllJS05MTWM2WWpDUjA2Q0RnbzI4RWRQaXZFcEJIWGF6ZUdhClhQOWVuWmlWdXBwRDBFcWlGd1VCQkREVE1yT1BBZ01CQUFHamdmZ3dnZlV3RGdZRFZSMFBBUUgvQkFRREFnR0cKTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQ0JnZ3JCZ0VGQlFjREFUQVNCZ05WSFJNQkFmOEVDREFHQVFILwpBZ0VBTUIwR0ExVWREZ1FXQkJUbnE1OFBMRE9nVTlOZVQzaklzb1FPTzlhU016QWZCZ05WSFNNRUdEQVdnQlI1CnRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQXlCZ2dyQmdFRkJRY0JBUVFtTUNRd0lnWUlLd1lCQlFVSE1BS0cKRm1oMGRIQTZMeTk0TVM1cExteGxibU55TG05eVp5OHdFd1lEVlIwZ0JBd3dDakFJQmdabmdRd0JBZ0V3SndZRApWUjBmQkNBd0hqQWNvQnFnR0lZV2FIUjBjRG92TDNneExtTXViR1Z1WTNJdWIzSm5MekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQWdFQVVUZFlVcUVpbXpXN1Rick95cExxQ2ZMN1ZPd1lmL1E3OU9INWNITENaZWdnZlFoRGNvbmwKazdLZ2g4YjB2aSsvWHVXdTdDTjhuL1VQZWcxdm8zRyt0YVhpcnJ5dHRoUWluQUhHd2MvVWRiT3lnSmE5enVCYwpWeXFvSDNDWFRYREluVCs4YStjM2FFVk1KMlN0K3BTbjRlZCtXa0RwOGlqc2lqdkV5RndFNDdodWxXMEx0empnCjlmT1Y1UG1yZy96eFdiUnVMK2swREJESEVKZW5uQ3NBZW43YzM1UG14N2pwbUovSHRnUmhjbnoweWpTQnZ5SXcKNkwxUUl1cGtDdjJTQk9EVC94REQzZ2ZRUXlLdjZyb1Y0RzJFaGZFeUFzV3Btb2p4akNVQ0dpeWc5N0Z2RHRtLwpOSzJMU2M5bHliS3hCNzNJMitQMkczQ2FXcHZ2cEFpSENWdTMwalc4R0N4S2RmaHNYdG5JeTJpbXNrUXFWWjJtCjBQbXhvYmIyOFR1Y3I3eEJLN0N0d3ZQcmI3OW9zN3UyWFAzTzVmOWIvSDY2R055UnJnbFJYbHJZakkxb0dZTC8KZjRJMW4vU2d1c2RhNld2QTZDMTkwa3hqVTE1WTEybUhVNCtCeHlSOWN4MmhoR1M5ZkFqTVpLSnNzMjhxeHZ6NgpBeHU0Q2FEbVJOWnBLL3BRclhGMTd5WENYa21FV2d2U09FWnk2WjlwY2JMSVZFR2NrVi9pVmVxMEFPbzJwa2c5CnA0UVJJeTB0SzJkaVJFTkxTRjJLeXNGd2JZNkIyNkJGZUZzM3Yxc1lWUmhGVzluTGtPclFWcG9yQ1MwS3labWYKd1ZEODlxU1RsbmN0TGNabklhdmpLc0tVdTFuQTFpVTB5WU1kWWVwS1I3bFdibndoZHgzZXdvaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    privateKey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeG15MExLclRrTzc0S2oxWDNCL0d1THk0dFd3VlI1dW1Jb2tPendXN0x3MUFIeXF0CmFnRzFicU1pQWJINVhsVzJtc0tpSVN0bTNZUDR5b2IyU2RJWG11MzRxcSsrNnZXTjZmdEhqY3lvNFVZRGRjcisKb2g0dVZHcmh3V3RKbG1nbmlyU1VCeWJGL2NEallGcklYcDJRc2pEMjBJdWRhRnpxeWhvbEVqdU5TaEh6RlJ6agpJcDJSa3lQeEttZlp4RXF4QmVUdkhWWlJHeFBPZk82SjRNVFFSVzlXOEluM0pNazVHZDNQN0xPS1JCWkFVbkUzCmFyRGVtWGdHVTdvUVFwV28vdjdKSExsQndPSGh6cUUwZnhOdzFKNWdRaVg5bitYall4NVM2UC8zdFFMS0VZK04KM1ozZmNLTGlMZVIwTUl3ZEk0dDlKRnpJdzl3SWpBSGVGcC95cVFJREFRQUJBb0lCQUE5RE0wU3dTeCs5MGVibAoyd2s2aEgyWFBwbnQyMkVycnNhL1JoMVVjb1oyL1hTb1FyaUJzeVAwZGx3dEJXSmxNMnVLQnhDSUZ4eDQxejAwCnptTDFQdzJTdW1yZW84L00zWUtlNm0wVXpmU3QvdndqaGh5UU43NFVqcExqSHNEcitBYXFSeXlacGVjVDNDbUEKTWlOYytWRkxoT0NickpybmNzUGk2UEVURlpZWjBvejFldVpDbm1BT2F5b1hRTlpBcTRnanBvMUtZNUV6M3ZSMwpleTlXbi9SajloSG1tOUJPQ3BNbE5TQVJ5U2VUTXV2bG5xYkw0OXY1M1JhaFJTeUlFcEZ6RWJySmtaRmEvRndFCloxVDJoUTdWVUhTc3dMMWF6d2ZVZW9WaFdQSFJaUHVjTXNFUDg2YkFiUkV0ZzNTaW9nK1M5bkh0YzQ2ekphMFgKMjNGZ3ZJVUNnWUVBenRoOG42bnNSUHZNekJCdHZQQjJiMlIyRzZIWldpNmdXZ3d3eEIzSlYzdlR6d1dDM3BqQQpPSGZoQTQxTktHRVJLYUJlVE85TUdXNWFCdFFDaWFRQk5FNmU0cVg0bENvemk4eWgrckVRNlFwb1Z1YnlQUUxDCjZiRGg3bDR4TzExTlh1dlcvS2Q3bzRNWXBrN2NrOUlndkhsT01sRGdNOWNHaXR1QkFwYnNGNk1DZ1lFQTlaUHIKNHpMd3Z4TG9SZTY5TFExeFYwWXFZckh1WHhuN1N2dmR1Nm8xcDZqMVBmdjBlUXBLWGZhbm50dEQvWkluaTZVeQp1cmxzZEx2cVRBNHlpSnd1T1RIa0lhOVBkcVVHVHI3ZmhPVWZ1dHc0YUtCMTJnQUpBV0lGMVZiMjFwYmR3RFdvClpraytSL3FKWVRlZVhlWDAwRG5hcTJ3THQweEZjeDFCTXNpcllVTUNnWUVBa0hIeHBYWCtQcll3Y0JqUTZXNXEKNXFNYkwzUzQyaGRSZDFDb0JXeGZuQzRtM1owVnBPaTY0elFqK0YwR2tyb21TQkZyaVFKYS9DOXB3dmJ1eHJ1Mgo4NVlyc2s4QTVrY0tOQWcwM1dJbFV2Z25vUGdxRlowR0REZXZyc3dzU1M2QXgxYWVqVlZRTEFGeWgwRHZISE5TCjFRdEpKaTRBUTNOWGFFU2ROUGU3NjAwQ2dZQVJKNDRZeHR3dVhNSEE4TlppS1VnN2tua3ZmOEpvL2tXaGpVcUYKNjNQb0RGTmxTdzVlemlzM3VSMG9hYVNzTitOdlM5RHBYajZIUVFFeTR1TUF5L2dtb3FlTyt0SVFOYUxsS1V3dgoybG1IRWc4V3IrN0xsYWtMWWErS29aS0lsdTFTbWV6emlEWkRqT3EvMGNUTVJsMzlsYTBDd0g5cEJIanRlNk9zClNudytSUUtCZ0Ixbm5iMjEzNzljQXFYOVhUS3Z2b1hNNVRWSWJhUXhYdURFU0IrWHJ3S3dxSThsTEpwZHc0UG8KNWxWRXg2TDZ0TENCTFlhYXlvTmE1NFVRSmQ4Z1Izelc0ZFBkVXlHa3VFU0htT0RienZkUzBPV1pkUWJyNjl0UwpFMTJrNU9LTlhkMnU5YTJUa3kxSkg3MkhLUnFZbUYyYjVwakJ2RllFNHBYZ3VJeVVNVEN6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==    
# PostgreSQL configuration (如果使用子chart)
postgresql:
  enabled: true
  auth:
    username: quantanexus
    password: quantanexus
    database: quantanexus001
  # 主数据库镜像配置
  image:
    registry: harbor.hi168.com/quantanexus
    repository: postgresql
    tag: 14.4.0-debian-11-r23
    pullPolicy: IfNotPresent
    # digest: ""
  primary:
    persistence:
      enabled: true
      # 必须空，才能匹配 hostPath PV
      storageClass: ""
      size: 40Gi
    # 让 Pod 也落在同一块节点
    nodeSelector:
      kubernetes.io/hostname: com-calino-master-2
    podSecurityContext:
      fsGroup: 1001 # 让 kubelet 把卷目录 chown 成 1001 
  # 新增 hostPath PV 控制段
  hostPath:
    # true=生成 hostPath PV；false=走集群默认动态供给
    enabled: true    
    node: com-calino-master-2   # 目标节点
    path: /var/lib/quantanexus/postgresql
    storage: 40Gi
  # Prometheus Exporter 镜像配置 (如果启用了 metrics)
  metrics:
    enabled: true
    image:
      registry: harbor.hi168.com/quantanexus
      repository: postgres-exporter
      tag: 0.10.1-debian-11-r24
      pullPolicy: IfNotPresent

redis:
  enabled: true
  auth:
    password: hi168pass
  path: /var/lib/quantanexus/redis-single

quantanexus:
  enabled: true
  replicaCount: 1

  # Quantanexus core application
  app:
    image: "harbor.hi168.com/quantanexus/quantanexus-basic"
    tag: "0.1.5"
    imagePullPolicy: "IfNotPresent"

  # Image pull secrets configuration
  imagePullSecrets:
    enabled: true
    secrets:
      - name: hi168-harbor-secret

  # Quantanexus manager (init container)
  manager:
    image: "harbor.hi168.com/quantanexus/quantanexus-mgr"
    tag: "v1.0.2.0"

  # Nginx reverse proxy
  nginx:
    enabled: true
    image: "registry.cn-hangzhou.aliyuncs.com/hwua_namespace/nginx"
    tag: "reverse"
    port: 8443

    # Frontend (Vue) init container
    frontend:
      image: "harbor.hi168.com/quantanexus/hi168-vue"
      tag: "v8.3.5.qn001v2"
      env:
        type: "hi168slot"
        moduleList: "basic"

  # Host aliases
  hostAliases:     
    - ip: "192.168.103.120"
      hostnames:
        - "harbor.hi168.com"

  # Storage paths
  storage:
    quantanexusData: "/var/lib/quantanexus/quantanexus"
    quantanexusMisc: "/var/lib/quantanexus/quantanexus-misc"
    runtime: "/mnt/quantanexus/runtime"

  # Environment variables
  env:
    home: "/var/lib/quantanexus"
    configPath: "/opt/etc/quantanexus/prod.conf"
    updateOption: "-i muk_web_theme,hw_base,hw_frontend -u all"
    preStartShell: "/opt/etc/quantanexus/pre-start.sh"

  # Liveness probe
  livenessProbe:
    path: "/liveness"
    port: 8069
    initialDelaySeconds: 300
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# ABC Experiment Service configuration
abcExperimentService:
  enabled: true
  replicaCount: 1

  # Application settings
  app:
    image: "harbor.hi168.com/quantanexus/abc-experiment-service"
    tag: "v1.3.2"
    imagePullPolicy: "IfNotPresent"

  # Service configuration
  service:
    port: 8075
    host: "0.0.0.0"

  # Docker configuration
  docker:
    baseUrl: "https://172.17.0.1:8088"
    certPath: "/etc/abc_platform/docker-ssl/client-cert.pem"
    keyPath: "/etc/abc_platform/docker-ssl/client-key.pem"
    caCertPath: "/etc/abc_platform/docker-ssl/ca.pem"

  # Kubernetes configuration
  kubernetes:
    configFile: "/etc/kubernetes/admin.conf"
    host: "https://172.17.0.1:6443"
    sslCaCert: "/etc/kubernetes/pki/ca.crt"
    verifySsl: "False"
    token: "eyJhbGciOiJSUzI1NiIsImtpZCI6ImtPU1V1blRqb0lMVzdZZ1FsTFh4Z1lUZ1VnS1gzekNNOGJWVnFycTR3X3MifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tOTlyOHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYWQ3NTM1MjgtNmZmNS00MDU0LWEwNDEtNzBiNTc1ZmUxMTljIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRhc2hib2FyZC1hZG1pbiJ9.bDMwLeuyCv4p3neoYDzS4T24haCC8FPirYybh5oYyLrZiYfcaHnzzBBsMY4kJkNS2oM0CqPb2PrmBWy7-TLWDmWAcTrSMZy11hPJRJwJuG0dQsajoGn8NZ6u1_n8Qso5Y8Fik1kEOSwpOa7eXDrAOrCUS-HySMHXNBXML3v541vHlpI9Zxw2pe6ELgvhZqFYIzydrS0ur48gM6rwI3Rp25b3ZB9Oy5dGB_ZpQAuXoY-QK9ymE8dUWpRX9V0WrNzrFnHB1-O5bjtSY_5ONBNDSJuSHydh7c-WxT9InH2M1v-FU2h8EEgYPYMmeHoYNslEsQg2Fq9VU-tFrJfdbhnkMA"
    assertHostname: "portal"
    server: "https://192.168.103.151:6443"
    caData: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtakNDQW9LZ0F3SUJBZ0lVYU0zT2tLU3BPVjA5TnNzcWFjNHROcTNnU2trd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pERUxNQWtHQTFVRUJoTUNRMDR4RVRBUEJnTlZCQWdUQ0VoaGJtZGFhRzkxTVFzd0NRWURWUVFIRXdKWQpVekVNTUFvR0ExVUVDaE1EYXpoek1ROHdEUVlEVlFRTEV3WlRlWE4wWlcweEZqQVVCZ05WQkFNVERXdDFZbVZ5CmJtVjBaWE10WTJFd0lCY05NalV3T1RFd01EWXlPVEF3V2hnUE1qRXlOVEE0TVRjd05qSTVNREJhTUdReEN6QUoKQmdOVkJBWVRBa05PTVJFd0R3WURWUVFJRXdoSVlXNW5XbWh2ZFRFTE1Ba0dBMVVFQnhNQ1dGTXhEREFLQmdOVgpCQW9UQTJzNGN6RVBNQTBHQTFVRUN4TUdVM2x6ZEdWdE1SWXdGQVlEVlFRREV3MXJkV0psY201bGRHVnpMV05oCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdk5FSVNqRENFZitLZ0hGbjNYaFkKcnFnU1M4UFc2QTh3ckwyb3phWkxkRmc5SEFSVjZ3T24zMC8weVVEUGFsSXlIdWF2UEJTeUVWOXlIL3Q1Wm9zTwozUkJjL1lLSW0ycmgvK1c5aTNpK0hBS3NiVWhSRVdJWDJ1MGxHbDZxZ0ltT1BFOVB5d3NzMno4SE9ZQjhaODBoCjV0ZWJQM3ZGWGV5SDB1OHM1bDk0Ri96UXNwWisxVVhWcWRURWhaMG4ybUlGUE9tdDNJK2lGRGpoNDFMdXFlb0gKUElhelRwUGFhTWlpcXNobTFNNzVIS3VGV1Yrdjk4UDVGZXVLYlBDY2hNb2hMUVFTVVJucmVyVWt4SW9MUDhKVwo3eTRFL2oxU3hiQjZFY1hhQ2xxUzN5WFNFZGpuQS9UVGNYMU1ZanlZZG4vUTRkTmVMcERsVUtITzNvZmN2VFJXCkxRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlYKSFE0RUZnUVVWSUg3K2d2VzhnaGVUandBOEFTZHFzMnhVQnN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlCRApacTNZMzdtSUlMRkRacWV2WDEvbmQvZitPS2FKRHpTa1h6dmxRdkIyeWdsNHpJUjIrRTluWHorT3FZQ09iUHpkCnd4bGI3U1plNVVaazFsdXBNN3oxdlYyOEM3K2hUQmFiSkNTdW82RDd3ZncwNlFpQ3Fqa25WakxpUzRsT2o5ai8KTlYwMUZMVzNzL0RDREZwSzFRS21YUW1Kbkl6YVM5TXRmREF5ajFHOWRGMzd4aDU2dmJzZ3NrbC9GZG1pdFVHRQozSjZXeXBRUnN2UUVKYWRPdzA3VjAvUUgyYi9nSm52aVkzQlZJUzdEOVJoNHJkZ3pDOWJscm5SVUh5dnlkN3dMCjVxYWdYNzRIL0RpdEN0RXFKM3BMakV3aytiMDFsL0NEMld0ZzBxa3JPRTlMS3doMW9IYjE5bWltRUZ4ZnlzTUMKS2MzOWVGNDA3bGczUGVBV2RoOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    clientCertData: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQyakNDQXNLZ0F3SUJBZ0lVR2g5bFMydStXM1NBOUJpQXd2ZGhNK0RscVlvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pERUxNQWtHQTFVRUJoTUNRMDR4RVRBUEJnTlZCQWdUQ0VoaGJtZGFhRzkxTVFzd0NRWURWUVFIRXdKWQpVekVNTUFvR0ExVUVDaE1EYXpoek1ROHdEUVlEVlFRTEV3WlRlWE4wWlcweEZqQVVCZ05WQkFNVERXdDFZbVZ5CmJtVjBaWE10WTJFd0lCY05NalV3T1RFd01EWXpPVEF3V2hnUE1qQTNOVEE0TWprd05qTTVNREJhTUdjeEN6QUoKQmdOVkJBWVRBa05PTVJFd0R3WURWUVFJRXdoSVlXNW5XbWh2ZFRFTE1Ba0dBMVVFQnhNQ1dGTXhGekFWQmdOVgpCQW9URG5ONWMzUmxiVHB0WVhOMFpYSnpNUTh3RFFZRFZRUUxFd1pUZVhOMFpXMHhEakFNQmdOVkJBTVRCV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVzYU1WQ05rUFdZWVlkWjcKU0plNEV5bXBpU1FwSnlHNEtDQzBzQ0xaSU9yZXd2K0VlTGtUcGxCVStvM0tscldVOCtxOHdzTzJCUzlzejY5Zwp5eUVrdVdWK1ZKUzloZTNtZ09tNjcxckxlMzY0OG5XSkVCNnBDcyt6UG8rZVp6blVHY3dBajM5NHFJR2VrNmNhCnJ2L09SQU9QWWRlOStEeDdKK1VKQnlTUUg5a3NJL2ZGaUZhV3JmOWdLaVpPTGlMWGZPU2w5dU9xeFh3NTdGRWEKOWVFTWdYS0hxK1E2WEVYbkVkaGRUQ3hNMDFORzJjTnlkdDh1cnpzS1dsNFp3TUdZekxNZnBQdE0vOFJmWktoWApuelgwdURJQ2pBSkhLY09oeStpanBIaXpzV3diNmZtNDkxbk14bEpENk93cWRtUTJnUnRBdlRBY3dzQlN6MXdyCmt5YVNyd0lEQVFBQm8zOHdmVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRk95SWJxV0RYdXF6eFZmMAphanZMK2J2MjhHbENNQjhHQTFVZEl3UVlNQmFBRkZTQisvb0wxdklJWGs0OEFQQUVuYXJOc1ZBYk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUNpZjJONjZ1WURpRTJyWHV4QlI5YWRhSmlTSURDY2JUelVlc1ZjUytiREprNWIKM3lNdDkwOTMycmhFaEMrbk1FakEwSTNhMFZMaGtxa2ROTmRtb0dFRkVVTE1aUjNsRnR6L3Z4Wng4M1NaRTEwYQpCaElDNExOMHBkdllCUW91ZUxjWGZ4Wm9VRjhGSEZPeCthdk5EM1NTbzhvcWE1dUVVTkhwZnB5UUVLUHV1ZTF0Cll2eTZtMnlTTUhkbTIreHhXeTQyWXNjMXJhaTNpcFhQbVo1T2kzLzc0MTJqbHZDMHhldW9JSXZobGhYUFdGbjcKRitsRkpNeDNFU0luVWVaSTh3VTFObklSMldBdlEzTUhEWEcwOGt6ek9wV0lES2FxTUR3clduV1pmc3V5OVFPeQppTDNYK2ZqVFpxS3VnNDlUMnR1d1ZGa095TkkxM3VScThzQjJwYTN5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    client-key-data: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXNhTVZDTmtQV1lZWWRaN1NKZTRFeW1waVNRcEp5RzRLQ0Mwc0NMWklPcmV3ditFCmVMa1RwbEJVK28zS2xyV1U4K3E4d3NPMkJTOXN6NjlneXlFa3VXVitWSlM5aGUzbWdPbTY3MXJMZTM2NDhuV0oKRUI2cENzK3pQbytlWnpuVUdjd0FqMzk0cUlHZWs2Y2Fydi9PUkFPUFlkZTkrRHg3SitVSkJ5U1FIOWtzSS9mRgppRmFXcmY5Z0tpWk9MaUxYZk9TbDl1T3F4WHc1N0ZFYTllRU1nWEtIcStRNlhFWG5FZGhkVEN4TTAxTkcyY055CmR0OHVyenNLV2w0WndNR1l6TE1mcFB0TS84UmZaS2hYbnpYMHVESUNqQUpIS2NPaHkraWpwSGl6c1d3YjZmbTQKOTFuTXhsSkQ2T3dxZG1RMmdSdEF2VEFjd3NCU3oxd3JreWFTcndJREFRQUJBb0lCQUdtdkRScFN5RmFCbll4Rwp5NDJBNDlSYi82VXRBK2d6aVR1VGZnb29QY29GZkRURVZsWGxDM3hRK2pTbjVKa3dkKzhveE5SRDM0dkJrUVZYClRDTEVSejVzY25Zemo2WG52a1QxZkNRUnNRL1kzWmU3NytsaUgrNlJKZkJoWFpVMVFKRzBRQ0R5VlBpc0YybWUKNVZkZVFYMTBzajMvMEd0VTlhN1dSeXgyZ09LemkxOE5mRk41eWZhMS9RZ3FQR2E3R0l4MGR1TFBXV1h2NmpjawoyZVkxVExwMFduYkJrcVUvZDhMelpHZnV0elF2U3NrQXIrUUNuMWdRNjM1TVI0SjVWUTlmQitjbTJPS1NHQy9zCkwyVkV6QTZRdWFJNXBPNDJnd2hXcHlOeXltRjVxM3RFd0I2YktkVUQ5WUtna0RoZkEyakRIOE5zOURhZE1RU2EKOUxjMlprRUNnWUVBK090UUM2NGZ6WVpSWWsvMCs5TVFqZmc4SWxQY3FDWmZudEIxdy9zS01tYUVqRXFYZzlxNwp3YXd1ZzE5dURmZVYvRTJtek0vZmFxTmNIZlpuaGoydUdDOGw0RUJPdm5mUEpOV2ViUDR2Z0F5cjJaSWEyUjFpClZTUGp0OGU1L3dVNFo3TGFnRytIZGJqWVIrUEduOTh4OEJ4Ty95bHRBTERVVWFtT0MrT1ZEYUVDZ1lFQXdCYXcKOTVIQk9XTTNGckpicGs4QitQSEdHWmRmYlkrRmlYb2ZhZ293N2F2VkJRdEw0MzF4OHhGMkZIaDEvSUtaVDRzWgp5aS81TklGa25JWHQvVnR1VExDYXhzWjB2RC9vTFEvNmZmZEJNZDZ4bmFVQThhSzcyWjVaaFFWcDN1S2tZQXlSClRlVHJYS24xUXlmck1kSGZ1MjNmU1FrNEZ6OWJoS2NPN2xUK25rOENnWUVBcjB5NUFLRE9FT1hKSnQxOGdHU3kKUWVsU0lETERNVUJsRXVsb0ptOERUVjlaZFp1S2ZQZHNSd2JGY3d1ZjdBSXpCSTZESzdZeGQxNDRuM2xLaXdXaApON0xzajdONlFUVUxFcnZHYUtmU04vRzBqUE1TS1ZsQ1NRZVBkWHdaQnZwY01OdUtlZTBSanR4d3BLQkszNGhHCkdQMDJ2UWdsbGRqeWpkaEZDeVpwY0VFQ2dZQkI2d2VMemM3N1BKcjVCUGdDbUhaYTBjMWpsdGkrcGxQekc1K1EKS2pNa1BLVjdkNmJ4U0dsRU9xZkUycG5TcjVhZy8yRTRTMEkvekcrVWJ6bCtpbFBOcVlWVDFXTFYvekJUMW5ubApwR1lSRVJUdXZtTVdpUHZoOEQ5VU1NbG1IV3kvTVZEajVEMElyYUpuQzFuZzNON2tXUTRZNkRzQmIxS2VzUjJrCm1ESlFiUUtCZ1FDbmR6dVNYczlnU2NWOUJFS01DdThoa0Q2TkUrK1V6WUFUekdnVzlNY3dramREeW1OY0hadDkKcGVNOUJlWjF5WUdqZFU3aWxDL1NCNzZMRUpmUm1CZjhscUg5SEZVYTlSWmFXa0dsZnBPSXpFVzFnRU03YUhWTQozejBKV1JKSWphLzBRNTdkZ1NwZzFwdEhsa1Vkc1BXRElYSVZtZXd5SmM2ejN4UzhtUVg3cHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
  
  # Virtual VNC configuration
  virtVnc:
    node: "192.168.103.170"
    port: 32211
  
  # Authentication
  enableAuth: false
  authUrlBase: "http://auth1.hi168.com:31069/vue/user/auth"

# ABC WebShell configuration
abcWebShell:
  enabled: true
  replicaCount: 1
  
  # Image configuration
  image:
    repository: harbor.hi168.com/quantanexus/abc-webshell
    tag: v2.2.4.8
    pullPolicy: IfNotPresent
  
  # Service account configuration
  serviceAccount:
    create: true
    name: abc-webshell
  
  # Node selector for master nodes
  nodeSelector:
    ha_node_type: master
  
  # App configuration
  config:
    appname: abc-webshell
    httpport: 8080
    runmode: "prod"
    kubeconfig: ""
    beego_pprof: true
    https: true
    url_prefix: ""
    enable_demo: true
    debug: true
  
  # Service configuration
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  
  # Ingress configuration
  ingress:
    enabled: true
    className: nginx
    paths:
      - /t(/|$)(.*)
      - /demo
      - /static/css/xterm.css
      - /static/css/bootstrap.min.css
      - /static/js/index.js
      - /static/xml/app.xml
      - /static/imgs/favicon.ico
    annotations:
      ingress.kubernetes.io/ingress.class: "nginx"
      nginx.org/client-max-body-size: 100M
      nginx.ingress.kubernetes.io/cors-allow-headers: >-
        DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-name: "session_id"
    tls:
      enabled: true
      secretName: abc-tls
# ABC Uploader configuration
abcUploader:
  enabled: true
  replicaCount: 1
  
  # Image configuration
  image:
    repository: harbor.hi168.com/quantanexus/abc-uploader
    tag: v1.0.0
    pullPolicy: IfNotPresent
  
  # Service account configuration (复用 WebShell 的 service account)
  serviceAccountName: abc-webshell
  
  # Node selector for master nodes
  nodeSelector:
    ha_node_type: master
  
  # App configuration
  config:
    appname: abc-uploader
    httpport: 8080
    runmode: "prod"
    kubeconfig: ""
    beego_pprof: true
    enable_allow_origin: false
    https: false
    url_prefix: ""
    enable_demo: true
    debug: true
    uploader_home: "/var/abc-uploader/upload"
    orm_debug: false
    clean_chunk_duration: 8
    sqlite_db_path: "/var/abc-uploader/datas/abc_uploader.db"
  
  # Host path volumes
  hostPaths:
    upload: "/usr/local/abc-uploader/upload"
    datas: "/usr/local/abc-uploader/datas"
    upload_david: "/usr/local/abc-uploader/upload-david"
  
  # Service configuration
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  
  # Ingress configuration
  ingress:
    enabled: true
    className: nginx
    paths:
      - /file/upload
    annotations:
      ingress.kubernetes.io/ingress.class: "nginx"
      nginx.org/client-max-body-size: 100M
      nginx.ingress.kubernetes.io/cors-allow-headers: >-
        DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
      nginx.ingress.kubernetes.io/affinity: "cookie"
      nginx.ingress.kubernetes.io/session-cookie-name: "session_id"
    tls:
      enabled: true
      secretName: abc-tls

# HWUA Node Service configuration
hwuaNodeService:
  enabled: true
  
  # Image configuration
  image:
    repository: harbor.hi168.com/quantanexus/hwua-node-service
    tag: 0.0.4
    pullPolicy: IfNotPresent
  
  # Configuration
  config:
    appname: "HWNodeService"
    logfile: "/var/log/hwua-node-service/service.log"
    cri:
      type: "containerd"
      socket_addr: "/run/containerd/containerd.sock"
      namespace: "k8s.io"
    server:
      ip: "0.0.0.0"
      port: 168
  
  # Host aliases
  hostAliases:
    - ip: "192.168.103.120"
      hostnames:
        - "harbor.hi168.com"
  
  # Image pull secrets
  imagePullSecrets: "hi168-harbor-secret"